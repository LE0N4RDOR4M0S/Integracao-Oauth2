version: '3.8'

services:
  postgres-db:
    image: postgres:15-alpine
    container_name: postgres-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: integracao
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - auth-network

  redis-cache:
    image: redis:7-alpine
    container_name: redis-cache
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - auth-network

  auth-app:
    build: .
    container_name: auth-app
    depends_on:
      - postgres-db
      - redis-cache
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/integracao
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=123456
      - SPRING_DATA_REDIS_HOST=redis-cache
      - SPRING_DATA_REDIS_PORT=6379
      - RECAPTCHA_KEY=sua_chave_de_site_recaptcha_aqui
      - RECAPTCHA_SECRET=sua_chave_secreta_recaptcha_aqui
    networks:
      - auth-network

  keycloak:
    container_name: baeldung-keycloak
    image: quay.io/keycloak:26.3.1
    command:
      - start-dev
      - --import-realm
    ports:
        - "8083:8080"
    volumes:
      - ./keycloak/:/opt/keycloak/data/import/
    environment:
        - KEYCLOAK_ADMIN=admin
        - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
        - KC_HTTP_PORT=8083
        - KC_HOSTNAME_URL=http://localhost:8083
        - KC_HOSTNAME_ADMIN_URL=http://localhost:8083
        - KC_HOSTNAME_STRICT_BACKCHANNEL=true
        - KC_HTTP_RELATIVE_PATH=/
        - KC_HTTP_ENABLED=true
        - KC_HEALTH_ENABLED=true
        - KC_METRICS_ENABLED=true
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ['CMD-SHELL', '[ -f /tmp/HealthCheck.java ] || echo "public class HealthCheck { public static void main(String[] args) throws java.lang.Throwable { System.exit(java.net.HttpURLConnection.HTTP_OK == ((java.net.HttpURLConnection)new java.net.URL(args[0]).openConnection()).getResponseCode() ? 0 : 1); } }" > /tmp/HealthCheck.java && java /tmp/HealthCheck.java http://localhost:8083/auth/health/live']
      interval: 5s
      timeout: 5s
      retries: 20

volumes:
  postgres_data:
  redis_data:

networks:
  auth-network:
    driver: bridge